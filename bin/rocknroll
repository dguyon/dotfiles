#!/usr/bin/env zsh

setopt extendedglob

if ! type 'brew' > /dev/null; then
  echo '--> Installing Homebrew'
  ruby -e "$(curl -fsSL https://raw.githubusercontent.com/Homebrew/install/master/install)"
fi

echo '--> Add extras Homebrew formulas'
brew tap homebrew/dupes
brew tap homebrew/homebrew-php
# brew tap caskroom/cask
brew tap caskroom/versions
brew tap caskroom/fonts

echo '--> Make sure Homebrew is up to date'
brew update && brew cask update

echo '--> Upgrade installed formulas'
brew upgrade

echo '--> BREW ALL THE THINGS!'
brew install curl --with-libssh2 --with-openssl --with-nghttp2 && brew unlink curl && brew link curl --force
brew install gettext && brew unlink gettext && brew link gettext --force
brew install openssl
brew install homebrew/dupes/make --with-default-names
brew install gnu-sed --with-default-names
brew install gnu-tar --with-default-names
brew install gnu-which --with-default-names

brew install git --with-brewed-curl --with-brewed-openssl
brew install lftp
brew install bash
brew install zsh
brew install zsh-completions
brew install the_silver_searcher
brew install ripgrep
brew install coreutils
brew install wget
brew install midnight-commander
brew install mtr --with-glib
brew install htop
brew install md5sha1sum
brew install mysql
brew install pv
brew install rsync
brew install ssh-copy-id
brew install heroku
brew install shellcheck
brew install imagemagick
brew install zopfli
brew install ghostscript
brew install mas

echo '--> CASK ALL THE THINGS!'
brew cask install font-ubuntu
brew cask install font-hack

brew cask install xquartz
brew cask install virtualbox

brew cask install vagrant
vagrant plugin install vagrant-hostsupdater
vagrant plugin install vagrant-triggers
vagrant plugin install vagrant-bindfs

brew cask install docker # Docker for Mac

brew cask install appcleaner
brew cask install vlc
brew cask install chromium
brew cask install google-chrome
brew cask install firefox
brew cask install iterm2
brew cask install libreoffice
brew cask install onyx
brew cask install keepassx
brew cask install dropbox
brew cask install brave
brew cask install whatsapp
brew cask install android-file-transfer
brew cask install imagealpha
brew cask install anatine
brew cask install gimp

echo '--> LETS CODE!'
# PHP
brew install php70 --with-imap --with-postgresql --with-homebrew-curl --with-homebrew-libxml2 --with-homebrew-libxslt --without-apache --without-ldap;
brew install php70-intl;
brew install php70-mcrypt;
brew install --HEAD php70-msgpack;
brew install --HEAD php70-memcached;
brew install --HEAD php70-redis;

# PHP Conf
echo "date.timezone = 'Europe/Paris'" >> /usr/local/etc/php/7.0/php.ini
echo "phar.readonly = Off" >> /usr/local/etc/php/7.0/php.ini

if ! type 'composer' > /dev/null; then
  curl -sSL https://getcomposer.org/installer | php -- --install-dir=/usr/local/bin --filename=composer
else
  composer self-update --clean-backups
fi

composer global require friendsofphp/php-cs-fixer
composer global require phpmetrics/phpmetrics

# Python
brew install python
pip install -U setuptools pip fabric autopep8 invoke glances

# Ruby
brew install ruby
gem update --system
# gem pristine --all --only-executables
gem install jekyll
gem install middleman

# Go
brew install go

# Node.js
brew install node --with-openssl --without-npm
mkdir -p "$HOME/.npm-packages"

if ! type 'npm' > /dev/null; then
  curl -sSL https://www.npmjs.com/install.sh | sh
fi

# yarn
brew install yarn

npm install --global npm@4
npm install --global speed-test@latest
npm install --global surge@latest
npm install --global webcoach@latest
npm install --global imageoptim-cli@latest

echo '--> Cleanup Homebrew formulas'
brew cleanup
brew cask cleanup

# slimzsh
if [ -d "$HOME/.slimzsh" ]; then
  echo '--> Updating slimzsh'
  cd "$HOME/.slimzsh/"
  git pull --prune
  git submodule update --init --recursive
  cd -
else
  echo '--> Installing slimzsh'
  git clone --recursive https://github.com/changs/slimzsh.git "$HOME/.slimzsh"
fi

echo '--> Symlinking dot files'
for dotfile in "${ZDOTDIR:-$HOME}"/.dotfiles/.{agignore,aliases,functions,gemrc,npmrc,gitconfig,gitignore_global,zprofile,zlogout,zshrc}; do
  ln -sf "$dotfile" "${ZDOTDIR:-$HOME}/${dotfile:t}" 2> /dev/null
done

exec $SHELL
